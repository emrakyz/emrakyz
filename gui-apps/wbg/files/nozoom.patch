diff --git a/main.c b/main.c
index 7a16690..3fe9e31 100644
--- a/main.c
+++ b/main.c
@@ -94,28 +94,22 @@ render(struct output *output)
     pixman_image_t *pix = pixman_image_create_bits_no_clear(
         img_fmt, img_width, img_height, data, img_stride);
 
-    double sx = (double)img_width / (width * scale);
-    double sy = (double)img_height / (height * scale);
-
-    float s = sx > sy ? sy : sx;
-    sx = s;
-    sy = s;
-
-    float tx = (img_width / sx - width) / 2 / sx;
-    float ty = (img_height / sy - height) / 2 / sy;
-
-    pixman_f_transform_t t;
-    pixman_transform_t t2;
-    pixman_f_transform_init_translate(&t, tx, ty);
-    pixman_f_transform_init_scale(&t, sx, sy);
-    pixman_transform_from_pixman_f_transform(&t2, &t);
-    pixman_image_set_transform(pix, &t2);
+    double scale_x = (double)(width * scale) / img_width;
+    double scale_y = (double)(height * scale) / img_height;
+    double scale_factor = scale_x < scale_y ? scale_x : scale_y;
+
+    pixman_transform_t transform;
+    pixman_transform_init_scale(&transform,
+                                pixman_double_to_fixed(1.0 / scale_factor),
+                                pixman_double_to_fixed(1.0 / scale_factor));
+
+    pixman_image_set_transform(pix, &transform);
     pixman_image_set_filter(pix, PIXMAN_FILTER_BEST, NULL, 0);
 
     pixman_image_composite32(
         PIXMAN_OP_SRC,
-        pix, NULL, buf->pix, 0, 0, 0, 0, 0, 0,
-        width * scale, height * scale);
+        pix, NULL, buf->pix,
+        0, 0, 0, 0, 0, 0, width * scale, height * scale);
 
     pixman_image_unref(pix);
 
