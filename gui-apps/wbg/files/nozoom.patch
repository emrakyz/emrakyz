diff --git a/main.c b/main.c
index 7a16690..7e6c188 100644
--- a/main.c
+++ b/main.c
@@ -94,19 +94,17 @@ render(struct output *output)
     pixman_image_t *pix = pixman_image_create_bits_no_clear(
         img_fmt, img_width, img_height, data, img_stride);
 
-    double sx = (double)img_width / (width * scale);
-    double sy = (double)img_height / (height * scale);
+    double sx = (double)(width * scale) / img_width;
+    double sy = (double)(height * scale) / img_height;
+    double s = sx < sy ? sx : sy;
 
-    float s = sx > sy ? sy : sx;
-    sx = s;
-    sy = s;
-
-    float tx = (img_width / sx - width) / 2 / sx;
-    float ty = (img_height / sy - height) / 2 / sy;
+    int dest_width = img_width * s;
+    int dest_height = img_height * s;
+    int offset_x = ((width * scale) - dest_width) / 2;
+    int offset_y = ((height * scale) - dest_height) / 2;
 
     pixman_f_transform_t t;
     pixman_transform_t t2;
-    pixman_f_transform_init_translate(&t, tx, ty);
     pixman_f_transform_init_scale(&t, sx, sy);
     pixman_transform_from_pixman_f_transform(&t2, &t);
     pixman_image_set_transform(pix, &t2);
@@ -114,8 +112,8 @@ render(struct output *output)
 
     pixman_image_composite32(
         PIXMAN_OP_SRC,
-        pix, NULL, buf->pix, 0, 0, 0, 0, 0, 0,
-        width * scale, height * scale);
+        pix, NULL, buf->pix, 0, 0, 0, 0, offset_x, offset_y,
+        dest_width, dest_height);
 
     pixman_image_unref(pix);
 
